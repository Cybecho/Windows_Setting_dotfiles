general:
  # Commands to run when the WM has started. This is useful for running a
  # script or launching another application.
  # Example: The below command launches Zebar.
  startup_commands:
    - "shell-exec zebar"
    - "shell-exec %userprofile%/.glzr/glazewm_monitoring.bat"

  # Commands to run just before the WM is shutdown.
  # Example: The below command kills Zebar.
  shutdown_commands: ["shell-exec taskkill /IM zebar.exe /F"]

  # Commands to run after the WM config is reloaded.
  config_reload_commands: []

  # Whether to automatically focus windows underneath the cursor.
  focus_follows_cursor: false

  # Whether to switch back and forth between the previously focused
  # workspace when focusing the current workspace.
  toggle_workspace_on_refocus: false

  cursor_jump:
    # Whether to automatically move the cursor on the specified trigger.
    enabled: true

    # Trigger for cursor jump:
    # - 'monitor_focus': Jump when focus changes between monitors.
    # - 'window_focus': Jump when focus changes between windows.
    trigger: "monitor_focus"

gaps:
  # Gap between adjacent windows.
  inner_gap: "30px"

  # Gap between windows and the screen edge.
  outer_gap:
    top: "40px"
    right: "35px"
    bottom: "20px"
    left: "35px"

window_effects:
  # Visual effects to apply to the focused window.
  focused_window:
    # Highlight the window with a colored border.
    # ** Exclusive to Windows 11 due to API limitations.
    border:
      enabled: true
      color: "#00ff00"

    # Remove the title bar from the window's frame.
    # ** Exclusive to Windows 11 due to API limitations.
    hide_title_bar:
      enabled: false

    # Change the corner style of the window's frame.
    # ** Exclusive to Windows 11 due to API limitations.
    corner_style:
      enabled: false
      # Allowed values: 'square', 'rounded', 'small_rounded'.
      style: "square"

  # Visual effects to apply to non-focused windows.
  other_windows:
    border:
      enabled: false
      color: "#a1a1a1"
    hide_title_bar:
      enabled: false
    corner_style:
      enabled: false
      style: "square"

window_behavior:
  # New windows are created in this state whenever possible.
  # Allowed values: 'tiling', 'floating'.
  initial_state: "tiling"

  # Sets the default options for when a new window is created. This also
  # changes the defaults for when the state change commands, like
  # `set-floating`, are used without any flags.
  state_defaults:
    floating:
      # Whether to center floating windows by default.
      centered: true

      # Whether to show floating windows as always on top.
      shown_on_top: true

    fullscreen:
      # Maximize the window if possible. If the window doesn't have a
      # maximize button, then it'll be fullscreen'ed normally instead.
      maximized: false

      # Whether to show fullscreen windows as always on top.
      shown_on_top: false

# bind_to_monitor 활성화하면 프로세스들이 뒤로 밀림
workspaces:
  - name: "1"
    # display_name: "Work"
    # bind_to_monitor: 1
    keep_alive: true
  - name: "2"
    # display_name: "Code"
    # bind_to_monitor: 1
    keep_alive: true
  - name: "3"
    # display_name: "Util"
    # bind_to_monitor: 1
    keep_alive: true
  - name: "4"
    # display_name: "Music"
    # bind_to_monitor: 1
    keep_alive: true
  - name: "5"
    # display_name: "Other"
    # bind_to_monitor: 1
    keep_alive: true
    # - name: "6"
    # - name: "7"
    # - name: "8"
    # - name: "9"

window_rules:
  # Ignore Task Manager and Screen Clipping Host.
  - commands: ["ignore"]
    match:
      - window_process:
          {
            regex: "Taskmgr|ScreenClippingHost|msedge|premeeng|explorer|ChatGPT|SnippingTool",
          }
      - window_process: { regex: "firefox.exe" } # Firefox Developer Edition 추가
      - window_process: { equals: "zebar" }

      # Ignores picture-in-picture windows for browsers.
      - window_title: { regex: "[Pp]icture.in.[Pp]icture" }
        window_class: { regex: "Chrome_WidgetWin_1|MozillaDialogClass" }

      # Ignore rules for various 3rd-party apps.
      - window_process: { equals: "PowerToys" }
        window_class: { regex: 'HwndWrapper\[PowerToys\.PowerAccent.*?\]' }
      - window_process: { equals: "Lively" }
        window_class: { regex: "HwndWrapper*" }
  - commands: ["set-floating"]
    match:
      - window_process: { regex: "KakaoTalk|JumpClient|DeepL|obs|ChatGPT" }

  # move workspace rules
  # - commands: ["move --workspace 1"]
  #   match:
  #     - window_process: { regex: "brave|firefox" }
  # - commands: ["move --workspace 2"]
  #   match:
  #     - window_process: { regex: "Code|Cursor" }
  - commands: ["move --workspace 5"]
    match:
      - window_process:
          {
            regex: "DeepL|KakaoTalk|GitHubDesktop|Discord|SystemSettings|설정|RoundedTB|JumpClient|obs",
          }
  - commands: ["move --workspace 4"]
    match:
      - window_process: { regex: "Spotify" }
binding_modes:
  # When enabled, the focused window can be resized via arrow keys or HJKL.
  - name: "resize"
    keybindings:
      - commands: ["resize --width -2%"]
        bindings: ["h", "left"]
      - commands: ["resize --width +2%"]
        bindings: ["l", "right"]
      - commands: ["resize --height +2%"]
        bindings: ["k", "up"]
      - commands: ["resize --height -2%"]
        bindings: ["j", "down"]
      # Press enter/escape to return to default keybindings.
      - commands: ["wm-disable-binding-mode --name resize"]
        bindings: ["escape", "enter"]

  # When enabled, all keybindings are disabled except for alt+shift+p which
  # returns to default keybindings.
  - name: "pause"
    keybindings:
      - commands: ["wm-disable-binding-mode --name pause"]
        bindings: ["alt+shift+p"]

keybindings:
  # Shift focus in a given direction.
  - commands: ["focus --direction left"]
    bindings: ["alt+LWin+j"]
  - commands: ["focus --direction right"]
    bindings: ["alt+LWin+l"]
  - commands: ["focus --direction up"]
    bindings: ["alt+LWin+i"]
  - commands: ["focus --direction down"]
    bindings: ["alt+LWin+k"]

  # Move focused window in a given direction.
  - commands: ["move --direction left"]
    bindings: ["alt+LWin+shift+j"]
  - commands: ["move --direction right"]
    bindings: ["alt+LWin+shift+l"]
  - commands: ["move --direction up"]
    bindings: ["alt+LWin+shift+i"]
  - commands: ["move --direction down"]
    bindings: ["alt+LWin+shift+k"]

  # Resize focused window by a percentage.
  - commands: ["resize --width +4%"]
    bindings: ["alt+win+o"]
  - commands: ["resize --width -4%"]
    bindings: ["alt+win+u"]
  - commands: ["resize --height +4%"]
    bindings: ["alt+win+shift+u"]
  - commands: ["resize --height -4%"]
    bindings: ["alt+win+shift+o"]

  # As an alternative to the resize keybindings above, resize mode enables
  # resizing via arrow keys or HJKL. The binding mode is defined above with
  # the name 'resize'.
  - commands: ["wm-enable-binding-mode --name resize"]
    bindings: ["alt+win+r"]

  # Change tiling direction. This determines where new tiling windows will
  # be inserted.
  - commands: ["toggle-tiling-direction"]
    bindings: ["alt+shift+d"]

  # Change focus from tiling windows -> floating -> fullscreen.
  - commands: ["wm-cycle-focus"]
    bindings: ["alt+LWin+space"]

  # Change the focused window to be floating.
  - commands: ["toggle-floating --centered"]
    bindings: ["alt+shift+space"]

  # Change the focused window to be tiling.
  - commands: ["toggle-tiling"]
    bindings: ["alt+LWin+t"]

  # Change the focused window to be fullscreen.
  - commands: ["toggle-fullscreen"]
    bindings: ["alt+LWin+f"]

  # Minimize focused window.
  - commands: ["toggle-minimized"]
    bindings: ["alt+LWin+m"]

  # Close focused window.
  - commands: ["close"]
    bindings: ["alt+shift+q"]

  # Kill GlazeWM process safely.
  - commands: ["wm-exit"]
    bindings: ["alt+escape"]

  # Re-evaluate configuration file.
  - commands: ["wm-reload-config"]
    bindings: ["alt+shift+r"]

  # Redraw all windows.
  - commands: ["wm-redraw"]
    bindings: ["alt+shift+w"]

  # Launch CMD terminal. Alternatively, use `shell-exec wt` or
  # `shell-exec %ProgramFiles%/Git/git-bash.exe` to start Windows
  # Terminal and Git Bash respectively.
  - commands: ["shell-exec wt"]
    bindings: ["alt+shift+enter", "alt+Lwin+enter"]

  # Focus the next/previous workspace defined in `workspaces` config.
  - commands: ["focus --next-workspace"]
    bindings: ["alt+LWin+shift+h", "LWin+LControlKey+Right"]
  - commands: ["focus --prev-workspace"]
    bindings: ["alt+LWin+shift+g", "LWin+LControlKey+Left"]

  # Focus the workspace that last had focus.
  # - commands: ["focus --recent-workspace"]
  #   bindings: ["alt+d"]

  # Change focus to a workspace defined in `workspaces` config.
  - commands: ["focus --workspace 1"]
    bindings: ["alt+1"]
  - commands: ["focus --workspace 2"]
    bindings: ["alt+2"]
  - commands: ["focus --workspace 3"]
    bindings: ["alt+3"]
  - commands: ["focus --workspace 4"]
    bindings: ["alt+4"]
  - commands: ["focus --workspace 5"]
    bindings: ["alt+5"]
    # - commands: ["focus --workspace 6"]
    # bindings: ["alt+6"]
    # - commands: ["focus --workspace 7"]
    # bindings: ["alt+7"]
    # - commands: ["focus --workspace 8"]
    # bindings: ["alt+8"]
    # - commands: ["focus --workspace 9"]
    # bindings: ["alt+9"]

  # Move the focused window's parent workspace to a monitor in a given
  # direction.
  - commands: ["move-workspace --direction left"]
    bindings: ["LControlKey+LWin+shift+j"]
  - commands: ["move-workspace --direction right"]
    bindings: ["LControlKey+LWin+shift+l"]
  - commands: ["move-workspace --direction up"]
    bindings: ["LControlKey+LWin+shift+i"]
  - commands: ["move-workspace --direction down"]
    bindings: ["LControlKey+LWin+shift+k"]

  # Move focused window to a workspace defined in `workspaces` config.
  - commands: ["move --workspace 1", "focus --workspace 1"]
    bindings: ["alt+shift+1"]
  - commands: ["move --workspace 2", "focus --workspace 2"]
    bindings: ["alt+shift+2"]
  - commands: ["move --workspace 3", "focus --workspace 3"]
    bindings: ["alt+shift+3"]
  - commands: ["move --workspace 4", "focus --workspace 4"]
    bindings: ["alt+shift+4"]
  - commands: ["move --workspace 5", "focus --workspace 5"]
    bindings: ["alt+shift+5"]
    # - commands: ["move --workspace 6", "focus --workspace 6"]
    # bindings: ["alt+shift+6"]
    # - commands: ["move --workspace 7", "focus --workspace 7"]
    # bindings: ["alt+shift+7"]
    # - commands: ["move --workspace 8", "focus --workspace 8"]
    # bindings: ["alt+shift+8"]
    # - commands: ["move --workspace 9", "focus --workspace 9"]
    # bindings: ["alt+shift+9"]
